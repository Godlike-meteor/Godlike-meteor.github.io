<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Godlike Meteor</title>
    <link>http://www.godlikemeteor.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>能被JS改写的终将被JS改写</description>
    <pubDate>Tue, 10 Jul 2018 08:36:35 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>LeetCode:旋转数组</title>
      <link>http://www.godlikemeteor.com/2018/07/10/LeetCode-%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84/</link>
      <guid>http://www.godlikemeteor.com/2018/07/10/LeetCode-%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84/</guid>
      <pubDate>Tue, 10 Jul 2018 08:31:19 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;旋转数组&quot;&gt;&lt;a href=&quot;#旋转数组&quot; class=&quot;headerlink&quot; title=&quot;旋转数组&quot;&gt;&lt;/a&gt;旋转数组&lt;/h2&gt;&lt;p&gt;给定一个数组，将数组中的元素向右移动 k 个位置，其中 k 是非负数。&lt;/p&gt;
&lt;h3 id=&quot;示例1&quot;&gt;&lt;a href=&quot;
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="旋转数组"><a href="#旋转数组" class="headerlink" title="旋转数组"></a>旋转数组</h2><p>给定一个数组，将数组中的元素向右移动 k 个位置，其中 k 是非负数。</p>
<h3 id="示例1"><a href="#示例1" class="headerlink" title="示例1:"></a>示例1:</h3><blockquote>
<p>输入: [1,2,3,4,5,6,7] 和 k = 3<br>输出: [5,6,7,1,2,3,4]<br>解释:<br>向右旋转 1 步: [7,1,2,3,4,5,6]<br>向右旋转 2 步: [6,7,1,2,3,4,5]<br>向右旋转 3 步: [5,6,7,1,2,3,4]</p>
</blockquote>
<h3 id="示例2"><a href="#示例2" class="headerlink" title="示例2:"></a>示例2:</h3><blockquote>
<p>输入: [-1,-100,3,99] 和 k = 2<br>输出: [3,99,-1,-100]<br>解释:<br>向右旋转 1 步: [99,-1,-100,3]<br>向右旋转 2 步: [3,99,-1,-100]</p>
</blockquote>
<h3 id="说明"><a href="#说明" class="headerlink" title="说明:"></a>说明:</h3><p>尽可能想出更多的解决方案，至少有三种不同的方法可以解决这个问题。<br>要求使用空间复杂度为 O(1) 的原地算法。</p>
<h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>利用原生JavaScript的简单的数组操作，循环进行入栈出栈操作即可。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * @param &#123;number[]&#125; nums</div><div class="line"> * @param &#123;number&#125; k</div><div class="line"> * @return &#123;void&#125; Do not return anything, modify nums in-place instead.</div><div class="line"> */</div><div class="line">var rotate = function(nums, k) &#123;</div><div class="line">    while(k--)&#123;</div><div class="line">        nums.unshift(nums.pop());</div><div class="line">    &#125;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://www.godlikemeteor.com/2018/07/10/LeetCode-%E6%97%8B%E8%BD%AC%E6%95%B0%E7%BB%84/#disqus_thread</comments>
    </item>
    
    <item>
      <title>LeetCode:买卖股票的最佳时机</title>
      <link>http://www.godlikemeteor.com/2018/07/05/LeetCCode-%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/</link>
      <guid>http://www.godlikemeteor.com/2018/07/05/LeetCCode-%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/</guid>
      <pubDate>Thu, 05 Jul 2018 02:49:26 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;买卖股票的最佳时机-II&quot;&gt;&lt;a href=&quot;#买卖股票的最佳时机-II&quot; class=&quot;headerlink&quot; title=&quot;买卖股票的最佳时机 II&quot;&gt;&lt;/a&gt;买卖股票的最佳时机 II&lt;/h2&gt;&lt;p&gt;给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="买卖股票的最佳时机-II"><a href="#买卖股票的最佳时机-II" class="headerlink" title="买卖股票的最佳时机 II"></a>买卖股票的最佳时机 II</h2><p>给定一个数组，它的第 i 个元素是一支给定股票第 i 天的价格。<br>设计一个算法来计算你所能获取的最大利润。你可以尽可能地完成更多的交易（多次买卖一支股票）。<br>注意：你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</p>
<h3 id="示例1"><a href="#示例1" class="headerlink" title="示例1:"></a>示例1:</h3><blockquote>
<p>输入: [7,1,5,3,6,4]<br>输出: 7<br>解释: 在第 2 天（股票价格 = 1）的时候买入，在第 3 天（股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5-1 = 4 。<br>     随后，在第 4 天（股票价格 = 3）的时候买入，在第 5 天（股票价格 = 6）的时候卖出, 这笔交易所能获得利润 = 6-3 = 3 。</p>
</blockquote>
<h3 id="示例2"><a href="#示例2" class="headerlink" title="示例2:"></a>示例2:</h3><blockquote>
<p>输入: [1,2,3,4,5]<br>输出: 4<br>解释: 在第 1 天（股票价格 = 1）的时候买入，在第 5 天 （股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5-1 = 4 。<br>     注意你不能在第 1 天和第 2 天接连购买股票，之后再将它们卖出。<br>     因为这样属于同时参与了多笔交易，你必须在再次购买前出售掉之前的股票。</p>
</blockquote>
<h3 id="示例2-1"><a href="#示例2-1" class="headerlink" title="示例2:"></a>示例2:</h3><blockquote>
<p>输入: [7,6,4,3,1]<br>输出: 0<br>解释: 在这种情况下, 没有交易完成, 所以最大利润为 0。</p>
</blockquote>
<h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>我们可以发现，这是一道典型的动态规划题，但是由于是基础，所以我们可以用数组进行简单的工作，我们只需要寻找前一天比今天的价值高就买入，后一天比今天价值低就卖出，即可解决该题。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * @param &#123;number[]&#125; prices</div><div class="line"> * @return &#123;number&#125;</div><div class="line"> */</div><div class="line">var maxProfit = function(prices) &#123;</div><div class="line">    var minPrice = prices[0];</div><div class="line">    var sumProfit = 0;</div><div class="line">    for(let i=1;i&lt;prices.length;i++)&#123;</div><div class="line">        if(minPrice&lt;prices[i])&#123;  </div><div class="line">           sumProfit += prices[i] - minPrice;  </div><div class="line">           minPrice = prices[i];  </div><div class="line">        &#125;</div><div class="line">        else&#123;  </div><div class="line">           minPrice = prices[i];  </div><div class="line">        &#125;  </div><div class="line">    &#125;</div><div class="line">    return sumProfit;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://www.godlikemeteor.com/2018/07/05/LeetCCode-%E4%B9%B0%E5%8D%96%E8%82%A1%E7%A5%A8%E7%9A%84%E6%9C%80%E4%BD%B3%E6%97%B6%E6%9C%BA/#disqus_thread</comments>
    </item>
    
    <item>
      <title>LeetCode:从排序数组中删除重复项</title>
      <link>http://www.godlikemeteor.com/2018/07/04/LeetCode-%E4%BB%8E%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E9%A1%B9/</link>
      <guid>http://www.godlikemeteor.com/2018/07/04/LeetCode-%E4%BB%8E%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E9%A1%B9/</guid>
      <pubDate>Wed, 04 Jul 2018 09:38:10 GMT</pubDate>
      <description>
      
        &lt;h2 id=&quot;从排序数组中删除重复项&quot;&gt;&lt;a href=&quot;#从排序数组中删除重复项&quot; class=&quot;headerlink&quot; title=&quot;从排序数组中删除重复项&quot;&gt;&lt;/a&gt;从排序数组中删除重复项&lt;/h2&gt;&lt;p&gt;给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现
      
      </description>
      
      <content:encoded><![CDATA[<h2 id="从排序数组中删除重复项"><a href="#从排序数组中删除重复项" class="headerlink" title="从排序数组中删除重复项"></a>从排序数组中删除重复项</h2><p>给定一个排序数组，你需要在原地删除重复出现的元素，使得每个元素只出现一次，返回移除后数组的新长度。<br>不要使用额外的数组空间，你必须在原地修改输入数组并在使用 O(1) 额外空间的条件下完成。</p>
<h3 id="示例1"><a href="#示例1" class="headerlink" title="示例1:"></a>示例1:</h3><blockquote>
<p>给定数组 nums = [1,1,2],<br>函数应该返回新的长度 2, 并且原数组 nums 的前两个元素被修改为 1, 2。<br>你不需要考虑数组中超出新长度后面的元素。</p>
</blockquote>
<h3 id="示例2"><a href="#示例2" class="headerlink" title="示例2:"></a>示例2:</h3><blockquote>
<p>给定 nums = [0,0,1,1,1,2,2,3,3,4],<br>函数应该返回新的长度 5, 并且原数组 nums 的前五个元素被修改为 0, 1, 2, 3, 4。<br>你不需要考虑数组中超出新长度后面的元素。</p>
</blockquote>
<h3 id="说明"><a href="#说明" class="headerlink" title="说明:"></a>说明:</h3><p>为什么返回数值是整数，但输出的答案是数组呢?<br>请注意，输入数组是以“引用”方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。<br>你可以想象内部操作如下:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">// nums 是以“引用”方式传递的。也就是说，不对实参做任何拷贝</div><div class="line">int len = removeDuplicates(nums);</div><div class="line"></div><div class="line">// 在函数里修改输入数组对于调用者是可见的。</div><div class="line">// 根据你的函数返回的长度, 它会打印出数组中该长度范围内的所有元素。</div><div class="line">for (int i = 0; i &lt; len; i++) &#123;</div><div class="line">    print(nums[i]);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>根据题目很好想出思路，首先从一开始定义一个标志位，每次找到不是重复的数字，标志位++，然后将标志位处的数字替换，最后返回数组的遍历长度。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * @param &#123;number[]&#125; nums</div><div class="line"> * @return &#123;number&#125;</div><div class="line"> */</div><div class="line">var removeDuplicates = function(nums) &#123;</div><div class="line">    var flog = 1;</div><div class="line">    var number = nums[0];</div><div class="line">    for(let i=1;i&lt;nums.length;i++)&#123;</div><div class="line">        if(nums[i]!=number)&#123;</div><div class="line">            nums[flog] = nums[i];</div><div class="line">            flog++;</div><div class="line">            number = nums[i];</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return flog;</div><div class="line">&#125;;</div></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://www.godlikemeteor.com/2018/07/04/LeetCode-%E4%BB%8E%E6%8E%92%E5%BA%8F%E6%95%B0%E7%BB%84%E4%B8%AD%E5%88%A0%E9%99%A4%E9%87%8D%E5%A4%8D%E9%A1%B9/#disqus_thread</comments>
    </item>
    
    <item>
      <title>数值分析函数画图模版：拉格朗日插值</title>
      <link>http://www.godlikemeteor.com/2018/03/29/%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90%E5%87%BD%E6%95%B0%E7%94%BB%E5%9B%BE%E6%A8%A1%E7%89%88%EF%BC%9A%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E6%8F%92%E5%80%BC/</link>
      <guid>http://www.godlikemeteor.com/2018/03/29/%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90%E5%87%BD%E6%95%B0%E7%94%BB%E5%9B%BE%E6%A8%A1%E7%89%88%EF%BC%9A%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E6%8F%92%E5%80%BC/</guid>
      <pubDate>Thu, 29 Mar 2018 06:03:40 GMT</pubDate>
      <description>
      
        &lt;p&gt;新学期开了数值分析课，老师要求实验需要编写函数并使用MATLAB之类的工具画出函数图像，怎奈何MATLAB需要花费很多的前并且不是很好用，canvas画图太过于繁琐，所以就开发了一种js暴力画图方法，来完成整个课程的设计。&lt;/p&gt;
&lt;h2 id=&quot;思路探讨&quot;&gt;&lt;a href
      
      </description>
      
      <content:encoded><![CDATA[<p>新学期开了数值分析课，老师要求实验需要编写函数并使用MATLAB之类的工具画出函数图像，怎奈何MATLAB需要花费很多的前并且不是很好用，canvas画图太过于繁琐，所以就开发了一种js暴力画图方法，来完成整个课程的设计。</p>
<h2 id="思路探讨"><a href="#思路探讨" class="headerlink" title="思路探讨"></a>思路探讨</h2><p>画图无非就是将一个个的小圆点尽可能的小并且尽可能的密，在不考虑算法时间复杂度和性能的前提下，我尝试用函数创建大量的圆点并且通过position进行定位实现本次实验的效果，完成后的效果如下（点稍微有点大导致锯齿化严重，后续可优化）</p>
<p><img src="/images/largange.jpg" alt=""></p>
<h2 id="拉格朗日插值法"><a href="#拉格朗日插值法" class="headerlink" title="拉格朗日插值法"></a>拉格朗日插值法</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">var x = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110, 120];</div><div class="line">var y = [5, 1, 7.5, 3, 4.5, 8.8, 15.5, 6.5, -5, -10, -2, 4.5, 7];</div><div class="line">function Lagrange(element) &#123;</div><div class="line">    var Ln = 0.0;</div><div class="line">    for (var k = 0; k &lt;= 12; k++) &#123;</div><div class="line">        Ln += y[k] * L(k, element);</div><div class="line">    &#125;</div><div class="line">    return Ln;</div><div class="line">    // console.log(Ln);</div><div class="line">&#125;</div><div class="line">function L(k, element) &#123;</div><div class="line">    var Lx = 1;</div><div class="line">    for (var j = 0; j &lt;= 12; j++) &#123;</div><div class="line">        if (j != k) &#123;</div><div class="line">            Lx = Lx * ((element - x[j]) / (x[k] - x[j]));</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    return Lx;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="暴力画图函数及代码"><a href="#暴力画图函数及代码" class="headerlink" title="暴力画图函数及代码"></a>暴力画图函数及代码</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line">&lt;!-- HTML --&gt;</div><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html lang=&quot;en&quot;&gt;</div><div class="line"></div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</div><div class="line">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</div><div class="line">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;ie=edge&quot;&gt;</div><div class="line">    &lt;title&gt;数值分析实验&lt;/title&gt;</div><div class="line">    &lt;style&gt;</div><div class="line">        * &#123;</div><div class="line">            margin: 0;</div><div class="line">            padding: 0;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        .box &#123;</div><div class="line">            height: 500px;</div><div class="line">            width: 800px;</div><div class="line">            position: absolute;</div><div class="line">            left: 50%;</div><div class="line">            top: 50%;</div><div class="line">            margin-top: -250px;</div><div class="line">            margin-left: -400px;</div><div class="line">            border-left: 2px solid #333;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        .circle &#123;</div><div class="line">            width: 10px;</div><div class="line">            height: 10px;</div><div class="line">            background-color: #000;</div><div class="line">            border-radius: 20px;</div><div class="line">            position: absolute;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        .sign&#123;</div><div class="line">            height: 2px;</div><div class="line">            width: 800px;</div><div class="line">            background-color: #333;</div><div class="line">            position: absolute;</div><div class="line">            top: 250px;</div><div class="line">        &#125;</div><div class="line">    &lt;/style&gt;</div><div class="line">&lt;/head&gt;</div><div class="line"></div><div class="line">&lt;body&gt;</div><div class="line"></div><div class="line">    &lt;div class=&quot;box&quot; id=&quot;main&quot;&gt;</div><div class="line">        &lt;div class=&quot;sign&quot;&gt;&lt;/div&gt;</div><div class="line">    &lt;/div&gt;</div><div class="line"></div><div class="line">&lt;/body&gt;</div><div class="line"></div><div class="line">&lt;/html&gt;</div><div class="line"></div><div class="line"></div><div class="line">&lt;!-- 暴力画图算法 --&gt;</div><div class="line">function insert(x, y) &#123;</div><div class="line">    console.log(y);</div><div class="line">    var main = document.getElementById(&quot;main&quot;);</div><div class="line">    var div = document.createElement(&quot;div&quot;);</div><div class="line">    div.className = &quot;circle&quot;;</div><div class="line">    div.style.top = (250 - y*5 + 5) + &quot;px&quot;;</div><div class="line">    div.style.left = (x*5 - 5) + &quot;px&quot;;</div><div class="line">    main.appendChild(div);</div><div class="line">&#125;</div><div class="line">function maine() &#123;</div><div class="line">    for (var b=0; b &lt;= 120;) &#123;</div><div class="line">        insert(b, Lagrange(b));</div><div class="line">        b+=0.01;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">maine();</div></pre></td></tr></table></figure>]]></content:encoded>
      
      <comments>http://www.godlikemeteor.com/2018/03/29/%E6%95%B0%E5%80%BC%E5%88%86%E6%9E%90%E5%87%BD%E6%95%B0%E7%94%BB%E5%9B%BE%E6%A8%A1%E7%89%88%EF%BC%9A%E6%8B%89%E6%A0%BC%E6%9C%97%E6%97%A5%E6%8F%92%E5%80%BC/#disqus_thread</comments>
    </item>
    
    <item>
      <title>用JavaScript实现中缀表达式计算器【2.0】</title>
      <link>http://www.godlikemeteor.com/2018/03/03/%E7%94%A8JavaScript%E5%AE%9E%E7%8E%B0%E4%B8%AD%E7%BC%80%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AE%A1%E7%AE%97%E5%99%A8%E3%80%902-0%E3%80%91/</link>
      <guid>http://www.godlikemeteor.com/2018/03/03/%E7%94%A8JavaScript%E5%AE%9E%E7%8E%B0%E4%B8%AD%E7%BC%80%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AE%A1%E7%AE%97%E5%99%A8%E3%80%902-0%E3%80%91/</guid>
      <pubDate>Sat, 03 Mar 2018 14:19:14 GMT</pubDate>
      <description>
      
        &lt;p&gt;上次跟大家说到有关JavaScript中缀计算器的有关代码，但是在优化的过程中发现了一些问题，经过老师的指导改进了一下代码，形成了更易于理解的语法规范和界面交互，就本次代码更新分享给大家。&lt;/p&gt;
&lt;h2 id=&quot;改进一：提供更直观的计算按钮&quot;&gt;&lt;a href=&quot;#改进一：
      
      </description>
      
      <content:encoded><![CDATA[<p>上次跟大家说到有关JavaScript中缀计算器的有关代码，但是在优化的过程中发现了一些问题，经过老师的指导改进了一下代码，形成了更易于理解的语法规范和界面交互，就本次代码更新分享给大家。</p>
<h2 id="改进一：提供更直观的计算按钮"><a href="#改进一：提供更直观的计算按钮" class="headerlink" title="改进一：提供更直观的计算按钮"></a>改进一：提供更直观的计算按钮</h2><p>经过老师的建议，我添加了有关的计算的按钮，其实就是通过点击相应的按钮，获取显示框中的表达式并进行拆分，然后调用不同的计算函数来实现计算的结果。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">function</span> <span class="function"><span class="title">getResultInfix</span></span>()&#123;</div><div class="line">    var txt = document.getElementById(<span class="string">"txtScream"</span>);</div><div class="line">    var text = document.getElementById(<span class="string">"textarea"</span>);</div><div class="line">    <span class="keyword">if</span>(Judge(txt.value)==1)&#123;</div><div class="line">        var transit = txt.value + <span class="string">'#'</span>;</div><div class="line">        text.value = <span class="string">"中缀计算的结果为："</span>;</div><div class="line">        //调用中缀计算函数</div><div class="line">        txt.value = Infix(transit);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">function</span> <span class="function"><span class="title">getResultsuffix</span></span>()&#123;</div><div class="line">    var txt = document.getElementById(<span class="string">"txtScream"</span>);</div><div class="line">    var text = document.getElementById(<span class="string">"textarea"</span>);</div><div class="line">    <span class="keyword">if</span>(Judge(txt.value)==1)&#123;</div><div class="line">        var transit = txt.value + <span class="string">'#'</span>;</div><div class="line">        text.value = <span class="string">"后缀计算的结果为："</span>;</div><div class="line">        //调用后缀计算函数</div><div class="line">        txt.value = suffix(transit);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">function</span> <span class="function"><span class="title">getResultChange</span></span>()&#123;</div><div class="line">    var txt = document.getElementById(<span class="string">"txtScream"</span>);</div><div class="line">    var text = document.getElementById(<span class="string">"textarea"</span>);</div><div class="line">    <span class="keyword">if</span>(Judge(txt.value)==1)&#123;</div><div class="line">        var transit = txt.value + <span class="string">'#'</span>;</div><div class="line">        text.value = <span class="string">"后缀表达式的结果为："</span>;</div><div class="line">        //调用中缀转后缀函数</div><div class="line">        txt.value = Change(transit);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="改进二：括号匹配异常处理"><a href="#改进二：括号匹配异常处理" class="headerlink" title="改进二：括号匹配异常处理"></a>改进二：括号匹配异常处理</h2><p>在上一个例子中是没有加入括号匹配异常处理的，在实际操作中我发现不添加异常处理的话会使程序发生运算bug，导致运算结果不准确，加入异常处理使遇到括号不匹配的问题时提示用户检查计算式是否正确，来矫正用户的输入错误。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">function</span> Judge(item)&#123;</div><div class="line">    var str=item;</div><div class="line">    var outStack=new Stack();</div><div class="line">    outStack.push(<span class="string">'#'</span>);</div><div class="line">    <span class="keyword">for</span>(var i=0;i&lt;item.length;i++)&#123;</div><div class="line">        <span class="keyword">if</span>(str[i]==<span class="string">'('</span>)&#123;</div><div class="line">            outStack.push(<span class="string">'('</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(str[i]==<span class="string">')'</span>)&#123;</div><div class="line">            <span class="keyword">if</span>(outStack.peek()==<span class="string">'('</span>)&#123;</div><div class="line">                outStack.pop();</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">else</span>&#123;</div><div class="line">                alert(<span class="string">"抱歉，您的括号不能够匹配，请检查你的输入！"</span>);</div><div class="line">                <span class="built_in">return</span> 0;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span>(outStack.peek()!=<span class="string">'#'</span>)&#123;</div><div class="line">        alert(<span class="string">"抱歉，您的括号不能够匹配，请检查你的输入！"</span>);</div><div class="line">        <span class="built_in">return</span> 0;</div><div class="line">    &#125;</div><div class="line">    <span class="built_in">return</span> 1;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>即在判断函数即处理括号匹配问题，如果处理的不准确，立即停止操作，直到用户输入正确为止。</p>
<h2 id="运算符按钮的优化"><a href="#运算符按钮的优化" class="headerlink" title="运算符按钮的优化"></a>运算符按钮的优化</h2><p>在实际操作中，发现会有一些更容易发生的问题，例如用户没有输入数字直接输入运算符的话运算会导致运算结果不准确或者程序停止运行，再例如用户输入一个运算符后直接输入另外一个运算符，都会使程序产生问题，这就需要对运算符控制函数进行修改，具体代码如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">function</span> putTheControlKey(control)&#123;</div><div class="line">    var txt = document.getElementById(<span class="string">"txtScream"</span>);</div><div class="line">    // 处理空输入提醒用户</div><div class="line">    <span class="keyword">if</span>(txt.value == 0)</div><div class="line">    &#123;</div><div class="line">        alert(<span class="string">"请先输入至少一个数字后再输入运算符！"</span>);</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    &#125;</div><div class="line">    //如果输入框最后一个字符是运算符，先删除最后的运算符，再将键入运算符加入字符串尾</div><div class="line">    <span class="keyword">if</span>(txt.value[txt.value.length-1] ==<span class="string">"+"</span> || txt.value[txt.value.length-1] ==<span class="string">"-"</span> || txt.value[txt.value.length-1] ==<span class="string">"*"</span> || txt.value[txt.value.length-1] ==<span class="string">"/"</span>)&#123;</div><div class="line">        backSpace();</div><div class="line">    &#125;</div><div class="line">    txt.value += control.value;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>其他优化诸如除零异常处理，后缀表达式逗号隔开，负数处理等都进行了优化，具体效果请查看<a href="http://htmlpreview.github.io/?https://github.com/Godlike-meteor/-2.0/blob/master/%E7%A5%9E%E5%A5%87%E7%9A%84%E8%AE%A1%E7%AE%97%E5%99%A8.html" target="_blank" rel="external">神奇的计算器（改进版）</a>,附上完成图，谢谢大家。</p>
<p><img src="/images/计算器改进.jpg" alt=""></p>
]]></content:encoded>
      
      <comments>http://www.godlikemeteor.com/2018/03/03/%E7%94%A8JavaScript%E5%AE%9E%E7%8E%B0%E4%B8%AD%E7%BC%80%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AE%A1%E7%AE%97%E5%99%A8%E3%80%902-0%E3%80%91/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
