<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Godlike Meteor</title>
    <link>http://www.godlikemeteor.com/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>能被JS改写的终将被JS改写</description>
    <pubDate>Thu, 01 Mar 2018 08:14:29 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Git技巧:本地项目网络化</title>
      <link>http://www.godlikemeteor.com/2018/03/01/Git%E6%8A%80%E5%B7%A7-%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E7%BD%91%E7%BB%9C%E5%8C%96/</link>
      <guid>http://www.godlikemeteor.com/2018/03/01/Git%E6%8A%80%E5%B7%A7-%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E7%BD%91%E7%BB%9C%E5%8C%96/</guid>
      <pubDate>Thu, 01 Mar 2018 07:59:34 GMT</pubDate>
      <description>
      
        &lt;p&gt;这篇文章主要是就上篇文章&lt;a href=&quot;http://godlikemeteor.com/2018/03/01/Git%E7%9A%84%E4%BD%BF%E7%94%A8-%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E4%B8%8A%E4%
      
      </description>
      
      <content:encoded><![CDATA[<p>这篇文章主要是就上篇文章<a href="http://godlikemeteor.com/2018/03/01/Git%E7%9A%84%E4%BD%BF%E7%94%A8-%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E4%B8%8A%E4%BC%A0Github/" target="_blank" rel="external">Git技巧:本地项目上传Github</a>项目的优化，大家也许会有如下的苦恼：本地网页建好无法在网络上查看，也无法在手机上查看，GitHub就提供给程序员一个非常棒的环境，我们不用搭建服务器就可以在网络上实现项目的共享和查看。</p>
<h2 id="GitHub提供接口"><a href="#GitHub提供接口" class="headerlink" title="GitHub提供接口"></a>GitHub提供接口</h2><p>首先我们必须先登录<a href="http://htmlpreview.github.io/?" target="_blank" rel="external">GitHub和BitBucket HTML预览</a>,就是如下图所示的一个转接口，同时我们想要在网络分享也需要这个接口。</p>
<p><img src="/images/git技巧8.jpg" alt=""></p>
<h2 id="预览的HTML文件的URL"><a href="#预览的HTML文件的URL" class="headerlink" title="预览的HTML文件的URL"></a>预览的HTML文件的URL</h2><p>现在你只需要将预览的HTML文件的URL放入输入框中就可以预览你的项目了，就我的项目为例，我们需要进入整个项目的主页面也就是index.html中，复制地址栏的地址，也就是你的要预览的HTML文件的URL。</p>
<p><img src="/images/git技巧9.jpg" alt=""></p>
<h2 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h2><p>最后复制到input中就可以实现网络的预览和分享了，是不是很神奇呢？一起来试试吧！</p>
<p><img src="/images/git技巧10.jpg" alt=""></p>
<p><img src="/images/git技巧11.jpg" alt=""></p>
]]></content:encoded>
      
      <comments>http://www.godlikemeteor.com/2018/03/01/Git%E6%8A%80%E5%B7%A7-%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E7%BD%91%E7%BB%9C%E5%8C%96/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Git技巧:本地项目上传Github</title>
      <link>http://www.godlikemeteor.com/2018/03/01/Git%E7%9A%84%E4%BD%BF%E7%94%A8-%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E4%B8%8A%E4%BC%A0Github/</link>
      <guid>http://www.godlikemeteor.com/2018/03/01/Git%E7%9A%84%E4%BD%BF%E7%94%A8-%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E4%B8%8A%E4%BC%A0Github/</guid>
      <pubDate>Thu, 01 Mar 2018 05:21:52 GMT</pubDate>
      <description>
      
        &lt;p&gt;最近做了很多新的项目，就很想将所得的项目传到GitHub上，今天就带来一篇简单的Git技巧，就是将本地的项目传送到GitHub上。&lt;/p&gt;
&lt;h1 id=&quot;详细步骤&quot;&gt;&lt;a href=&quot;#详细步骤&quot; class=&quot;headerlink&quot; title=&quot;详细步骤&quot;&gt;&lt;/a&gt;详
      
      </description>
      
      <content:encoded><![CDATA[<p>最近做了很多新的项目，就很想将所得的项目传到GitHub上，今天就带来一篇简单的Git技巧，就是将本地的项目传送到GitHub上。</p>
<h1 id="详细步骤"><a href="#详细步骤" class="headerlink" title="详细步骤"></a>详细步骤</h1><p>此处略过Git安装步骤，具体安装步骤请百度。</p>
<h2 id="第一步：创建本地库（新建文件夹）"><a href="#第一步：创建本地库（新建文件夹）" class="headerlink" title="第一步：创建本地库（新建文件夹）"></a>第一步：创建本地库（新建文件夹）</h2><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><p>直接右键新建名为project文件夹，右键<code>Git bash</code>命令行窗口通过以下命令进入即可。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ <span class="built_in">cd</span> project</div></pre></td></tr></table></figure>
<h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><p>右键<code>Git bash</code>命令行窗口通过命令来创建，使用下面的命令在任何地方创建一个名为project的文件夹，并进入这个文件夹。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ mkdir project</div><div class="line">$ <span class="built_in">cd</span> project</div></pre></td></tr></table></figure>
<h2 id="第二步：将文件夹变成可管理的仓库"><a href="#第二步：将文件夹变成可管理的仓库" class="headerlink" title="第二步：将文件夹变成可管理的仓库"></a>第二步：将文件夹变成可管理的仓库</h2><p>在命令行输入以下命令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git init</div></pre></td></tr></table></figure>
<p>你会发现project文件夹里面多了个<code>.git</code>文件夹，它是Git用来跟踪和管理本地仓库的，如果文件夹里没有<code>.git</code>文件夹，需要设置一下让隐藏文件可见。</p>
<h2 id="第三步：把项目添加到本地库"><a href="#第三步：把项目添加到本地库" class="headerlink" title="第三步：把项目添加到本地库"></a>第三步：把项目添加到本地库</h2><p>接下来就需要把项目的代码粘贴到本地Git仓库里面，然后通过<code>git add</code>把项目添加到仓库，这个过程可以用<code>git status</code>来查看当前的状态。</p>
<p><img src="/images/git技巧1.jpg" alt=""></p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git status</div></pre></td></tr></table></figure>
<p><img src="/images/git技巧2.jpg" alt=""></p>
<p>然后将刚才复制下来的项目全部添加到仓库里，用<code>git add .</code>命令来实现,然后查看一下当前状态。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ git add .</div><div class="line">$ git status</div></pre></td></tr></table></figure>
<p><img src="/images/git技巧3.jpg" alt=""></p>
<h2 id="第四步：把项目提交到仓库"><a href="#第四步：把项目提交到仓库" class="headerlink" title="第四步：把项目提交到仓库"></a>第四步：把项目提交到仓库</h2><p>用<code>git commit</code>把项目提交到仓库。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ git commit -m <span class="string">"first commit"</span></div></pre></td></tr></table></figure>
<p><img src="/images/git技巧4.jpg" alt=""></p>
<p>好了，本地仓库整完了，接下来就需要连接远程仓库。</p>
<h2 id="第五步：创建SSH-KEY"><a href="#第五步：创建SSH-KEY" class="headerlink" title="第五步：创建SSH KEY"></a>第五步：创建SSH KEY</h2><p>由于本地Git仓库和GitHub仓库之间的传输是通过SSH加密的，连接时要设置SSH KEY，先看一下C盘用户目录有没有<code>.ssh</code>目录，里面有<code>id_rsa</code>和<code>id_rsa.pub</code>这两个文件，有创建的话直接跳到第六步，没有就通过以下命令创建：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ ssh-keygen -t rsa -C <span class="string">"youremail@example.com"</span></div></pre></td></tr></table></figure>
<p>然后一直回车，直到用户目录里的<code>.ssh</code>目录里找到<code>id_rsa</code>和<code>id_rsa.pub</code>这两个文件。</p>
<h2 id="第六步：SSH-KEY加密"><a href="#第六步：SSH-KEY加密" class="headerlink" title="第六步：SSH KEY加密"></a>第六步：SSH KEY加密</h2><p>登录GitHub，找到右上角的头像，点击打开下方的<code>Settings</code>，再选中里面的<code>SSH and GPG KEYS</code> ,点击右上角的<code>New SSH key</code>，把刚才<code>id_rsa.pub</code>里面的内容复制到Title下面的Key内容框里面(title里随便写)，最后点击<code>Add SSH key</code>，这样就完成了SSH Key的加密。</p>
<p><img src="/images/git技巧5.jpg" alt=""></p>
<h2 id="第七步：在GitHub上创建一个仓库"><a href="#第七步：在GitHub上创建一个仓库" class="headerlink" title="第七步：在GitHub上创建一个仓库"></a>第七步：在GitHub上创建一个仓库</h2><p>点击右上角加号New repository来创建一个仓库，如下图：</p>
<p><img src="/images/git技巧6.jpg" alt=""></p>
<p>创建完成后，需要将本地仓库布置到GitHub上，注意使用语句就需要使用以下语句，每个人都不同，所以就不展示了</p>
<p><img src="/images/git技巧7.jpg" alt=""></p>
<p>这就已经完成了所有的上传步骤，是不是很简单呢？接下来我会就GitHub仓库代码创建网络应用链接进行说明，敬请期待。</p>
]]></content:encoded>
      
      <comments>http://www.godlikemeteor.com/2018/03/01/Git%E7%9A%84%E4%BD%BF%E7%94%A8-%E6%9C%AC%E5%9C%B0%E9%A1%B9%E7%9B%AE%E4%B8%8A%E4%BC%A0Github/#disqus_thread</comments>
    </item>
    
    <item>
      <title>JavaScript实战：简易五子棋</title>
      <link>http://www.godlikemeteor.com/2018/03/01/JavaScript%E5%AE%9E%E6%88%98%EF%BC%9A%E7%AE%80%E6%98%93%E4%BA%94%E5%AD%90%E6%A3%8B/</link>
      <guid>http://www.godlikemeteor.com/2018/03/01/JavaScript%E5%AE%9E%E6%88%98%EF%BC%9A%E7%AE%80%E6%98%93%E4%BA%94%E5%AD%90%E6%A3%8B/</guid>
      <pubDate>Thu, 01 Mar 2018 03:12:43 GMT</pubDate>
      <description>
      
        &lt;p&gt;前几天在慕客网上看见有关JavaScript实现简易五子棋的课程，就自己动手试了一下，这个课程主要是就JavaScript canvas制图实现五子棋的棋子和棋盘，但是这个五子棋还是有一些小bug并且这个五子棋的算法复杂度太高，后期有时间会优化进行算法逻辑的优化。&lt;/p&gt;

      
      </description>
      
      <content:encoded><![CDATA[<p>前几天在慕客网上看见有关JavaScript实现简易五子棋的课程，就自己动手试了一下，这个课程主要是就JavaScript canvas制图实现五子棋的棋子和棋盘，但是这个五子棋还是有一些小bug并且这个五子棋的算法复杂度太高，后期有时间会优化进行算法逻辑的优化。</p>
<p>具体的课程请移步慕课网<a href="https://www.imooc.com/learn/644" target="_blank" rel="external">JS实现人机大战之五子棋（AI篇）</a>和<a href="https://www.imooc.com/learn/639" target="_blank" rel="external">JS实现人机大战之五子棋（UI篇）</a>建议学习顺序先UI后AI,下面附上这次实践的源码。</p>
<h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html lang=<span class="string">"en"</span>&gt;</div><div class="line">&lt;head&gt;</div><div class="line">    &lt;meta charset=<span class="string">"UTF-8"</span>&gt;</div><div class="line">    &lt;meta name=<span class="string">"viewport"</span> content=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</div><div class="line">    &lt;meta http-equiv=<span class="string">"X-UA-Compatible"</span> content=<span class="string">"ie=edge"</span>&gt;</div><div class="line">    &lt;link rel=<span class="string">"stylesheet"</span> href=<span class="string">"css/style.css"</span>&gt;</div><div class="line">    &lt;title&gt;五子棋&lt;/title&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">    //canvas画布</div><div class="line">    &lt;canvas id=<span class="string">"chess"</span> width=<span class="string">"450px"</span> height=<span class="string">"450px"</span>&gt;&lt;/canvas&gt;</div><div class="line">    &lt;script src=<span class="string">"js/javascript.js"</span>&gt;&lt;/script&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">*&#123;</div><div class="line">    margin: 0;</div><div class="line">    padding: 0;</div><div class="line">&#125;</div><div class="line">//棋盘的样式</div><div class="line"><span class="comment">#chess&#123;</span></div><div class="line">    display: block;</div><div class="line">    margin: 50px auto;</div><div class="line">    box-shadow: -2px -2px 2px <span class="comment">#efefef, 5px 5px 5px #898989;</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="JavaScript"><a href="#JavaScript" class="headerlink" title="JavaScript"></a>JavaScript</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">var chessBoard = [];</div><div class="line">var me = <span class="literal">true</span>;</div><div class="line">var over = <span class="literal">false</span>;</div><div class="line"></div><div class="line">// 赢法数组</div><div class="line">var wins = [];</div><div class="line"></div><div class="line">// 赢法的统计数组</div><div class="line">var myWin = [];</div><div class="line">var computerWin = [];</div><div class="line"></div><div class="line"><span class="keyword">for</span> (var i = 0; i &lt; 15; i++) &#123;</div><div class="line">    chessBoard[i] = [];</div><div class="line">    <span class="keyword">for</span> (var j = 0; j &lt; 15; j++) &#123;</div><div class="line">        chessBoard[i][j] = 0;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">for</span> (var i = 0; i &lt; 15; i++) &#123;</div><div class="line">    wins[i] = [];</div><div class="line">    <span class="keyword">for</span> (var j = 0; j &lt; 15; j++) &#123;</div><div class="line">        wins[i][j] = [];</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">var count = 0;</div><div class="line">//所有的横线</div><div class="line"><span class="keyword">for</span> (var i = 0; i &lt; 15; i++) &#123;</div><div class="line">    <span class="keyword">for</span> (var j = 0; j &lt; 11; j++) &#123;</div><div class="line">        <span class="keyword">for</span> (var k = 0; k &lt; 5; k++) &#123;</div><div class="line">            wins[i][j + k][count] = <span class="literal">true</span>;</div><div class="line">        &#125;</div><div class="line">        count++;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">//所有的竖线</div><div class="line"><span class="keyword">for</span> (var i = 0; i &lt; 15; i++) &#123;</div><div class="line">    <span class="keyword">for</span> (var j = 0; j &lt; 11; j++) &#123;</div><div class="line">        <span class="keyword">for</span> (var k = 0; k &lt; 5; k++) &#123;</div><div class="line">            wins[j + k][i][count] = <span class="literal">true</span>;</div><div class="line">        &#125;</div><div class="line">        count++;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">//所有的斜线</div><div class="line"><span class="keyword">for</span> (var i = 0; i &lt; 11; i++) &#123;</div><div class="line">    <span class="keyword">for</span> (var j = 0; j &lt; 11; j++) &#123;</div><div class="line">        <span class="keyword">for</span> (var k = 0; k &lt; 5; k++) &#123;</div><div class="line">            wins[i + k][j + k][count] = <span class="literal">true</span>;</div><div class="line">        &#125;</div><div class="line">        count++;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line">//所有的反斜线</div><div class="line"><span class="keyword">for</span> (var i = 0; i &lt; 11; i++) &#123;</div><div class="line">    <span class="keyword">for</span> (var j = 14; j &gt; 3; j--) &#123;</div><div class="line">        <span class="keyword">for</span> (var k = 0; k &lt; 5; k++) &#123;</div><div class="line">            wins[i + k][j - k][count] = <span class="literal">true</span>;</div><div class="line">        &#125;</div><div class="line">        count++;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">for</span> (var i = 0; i &lt; count; i++) &#123;</div><div class="line">    myWin[i] = 0;</div><div class="line">    computerWin[i] = 0;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line">var chess = document.getElementById(<span class="string">'chess'</span>);</div><div class="line">var context = chess.getContext(<span class="string">'2d'</span>);</div><div class="line"></div><div class="line">context.strokeStyle = <span class="string">'#bfbfbf'</span>;</div><div class="line"></div><div class="line">var logo = new Image();</div><div class="line">logo.src = <span class="string">"images/小埋.png"</span>;</div><div class="line">logo.onload = <span class="function"><span class="title">function</span></span> () &#123;</div><div class="line">    context.drawImage(logo, 0, 0, 450, 450);</div><div class="line">    drawChessBoard();</div><div class="line">&#125;</div><div class="line">var drawChessBoard = <span class="function"><span class="title">function</span></span> () &#123;</div><div class="line">    <span class="keyword">for</span> (var i = 0; i &lt; 15; i++) &#123;</div><div class="line">        context.moveTo(15 + i * 30, 15);</div><div class="line">        context.lineTo(15 + i * 30, 435);</div><div class="line">        context.stroke();</div><div class="line">        context.moveTo(15, 15 + i * 30);</div><div class="line">        context.lineTo(435, 15 + i * 30);</div><div class="line">        context.stroke();</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">var oneStep = <span class="keyword">function</span> (i, j, me) &#123;</div><div class="line">    context.beginPath();</div><div class="line">    context.arc(15 + i * 30, 15 + j * 30, 13, 0, 2 * Math.PI);</div><div class="line">    context.closePath();</div><div class="line">    var gradient = context.createRadialGradient(15 + i * 30 + 2, 15 + j * 30 - 2, 13, 15 + i * 30 + 2, 15 + j * 30 - 2, 0);</div><div class="line">    <span class="keyword">if</span> (me) &#123;</div><div class="line">        gradient.addColorStop(0, <span class="string">"#0a0a0a"</span>);</div><div class="line">        gradient.addColorStop(1, <span class="string">"#636766"</span>);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">else</span> &#123;</div><div class="line">        gradient.addColorStop(0, <span class="string">"#d1d1d1"</span>);</div><div class="line">        gradient.addColorStop(1, <span class="string">"#f9f9f9"</span>);</div><div class="line">    &#125;</div><div class="line">    context.fillStyle = gradient;</div><div class="line">    context.fill();</div><div class="line">&#125;</div><div class="line"></div><div class="line">chess.onclick = <span class="keyword">function</span> (e) &#123;</div><div class="line">    <span class="keyword">if</span> (over) &#123;</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (!me) &#123;</div><div class="line">        <span class="built_in">return</span>;</div><div class="line">    &#125;</div><div class="line">    var x = e.offsetX;</div><div class="line">    var y = e.offsetY;</div><div class="line">    var i = Math.floor(x / 30);</div><div class="line">    var j = Math.floor(y / 30);</div><div class="line">    <span class="keyword">if</span> (chessBoard[i][j] == 0) &#123;</div><div class="line">        oneStep(i, j, me);</div><div class="line">        chessBoard[i][j] = 1;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span> (var k = 0; k &lt; count; k++) &#123;</div><div class="line">        // <span class="keyword">if</span> (me == <span class="literal">false</span>)</div><div class="line">        <span class="keyword">if</span> (wins[i][j][k]) &#123;</div><div class="line">            myWin[k]++;</div><div class="line">            computerWin[k] = 6;</div><div class="line">            <span class="keyword">if</span> (myWin[k] == 5) &#123;</div><div class="line">                alert(<span class="string">"你赢了！"</span>);</div><div class="line">                over = <span class="literal">true</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (!over) &#123;</div><div class="line">        computerAI();</div><div class="line">        me = !me;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">var computerAI = <span class="function"><span class="title">function</span></span> () &#123;</div><div class="line">    var myScore = [];</div><div class="line">    var computerScore = [];</div><div class="line">    var max = 0;</div><div class="line">    var u = 0, v = 0;</div><div class="line">    <span class="keyword">for</span> (var i = 0; i &lt; 15; i++) &#123;</div><div class="line">        myScore[i] = [];</div><div class="line">        computerScore[i] = [];</div><div class="line">        <span class="keyword">for</span> (var j = 0; j &lt; 15; j++) &#123;</div><div class="line">            myScore[i][j] = 0;</div><div class="line">            computerScore[i][j] = 0;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">for</span> (var i = 0; i &lt; 15; i++) &#123;</div><div class="line">        <span class="keyword">for</span> (var j = 0; j &lt; 15; j++) &#123;</div><div class="line">            <span class="keyword">if</span> (chessBoard[i][j] == 0) &#123;</div><div class="line">                <span class="keyword">for</span> (var k = 0; k &lt; count; k++) &#123;</div><div class="line">                    <span class="keyword">if</span> (wins[i][j][k]) &#123;</div><div class="line">                        <span class="keyword">if</span> (myWin[k] == 1) &#123;</div><div class="line">                            myScore[i][j] += 200;</div><div class="line">                        &#125;</div><div class="line">                        <span class="keyword">else</span> <span class="keyword">if</span> (myWin[k] == 2) &#123;</div><div class="line">                            myScore[i][j] += 400;</div><div class="line">                        &#125;</div><div class="line">                        <span class="keyword">else</span> <span class="keyword">if</span> (myWin[k] == 3) &#123;</div><div class="line">                            myScore[i][j] += 2000;</div><div class="line">                        &#125;</div><div class="line">                        <span class="keyword">else</span> <span class="keyword">if</span> (myWin[k] == 4) &#123;</div><div class="line">                            myScore[i][j] += 10000;</div><div class="line">                        &#125;</div><div class="line">                        <span class="keyword">if</span> (computerWin[k] == 1) &#123;</div><div class="line">                            computerScore[i][j] += 210;</div><div class="line">                        &#125;</div><div class="line">                        <span class="keyword">else</span> <span class="keyword">if</span> (computerWin[k] == 2) &#123;</div><div class="line">                            computerScore[i][j] += 420;</div><div class="line">                        &#125;</div><div class="line">                        <span class="keyword">else</span> <span class="keyword">if</span> (computerWin[k] == 3) &#123;</div><div class="line">                            computerScore[i][j] += 2100;</div><div class="line">                        &#125;</div><div class="line">                        <span class="keyword">else</span> <span class="keyword">if</span> (computerWin[k] == 4) &#123;</div><div class="line">                            computerScore[i][j] += 20000;</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">if</span> (myScore[i][j] &gt; max) &#123;</div><div class="line">                    max = myScore[i][j];</div><div class="line">                    u = i;</div><div class="line">                    v = j;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (myScore[i][j] == max) &#123;</div><div class="line">                    <span class="keyword">if</span> (computerScore[i][j] &gt; computerScore[u][v]) &#123;</div><div class="line">                        u = i;</div><div class="line">                        v = j;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">if</span> (computerScore[i][j] &gt; max) &#123;</div><div class="line">                    max = computerScore[i][j];</div><div class="line">                    u = i;</div><div class="line">                    v = j;</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">else</span> <span class="keyword">if</span> (computerScore[i][j] == max) &#123;</div><div class="line">                    <span class="keyword">if</span> (myScore[i][j] &gt; myScore[u][v]) &#123;</div><div class="line">                        u = i;</div><div class="line">                        v = j;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    oneStep(u, v, <span class="literal">false</span>);</div><div class="line">    chessBoard[u][v] = 2;</div><div class="line">    <span class="keyword">for</span> (var k = 0; k &lt; count; k++) &#123;</div><div class="line">        <span class="keyword">if</span> (wins[u][v][k]) &#123;</div><div class="line">            computerWin[k]++;</div><div class="line">            myWin[k] = 6;</div><div class="line">            <span class="keyword">if</span> (computerWin[k] == 5) &#123;</div><div class="line">                alert(<span class="string">"AI赢了！"</span>);</div><div class="line">                over = <span class="literal">true</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (!over) &#123;</div><div class="line">        me = !me;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>由于本次实战只是简单的JavaScript数组的逻辑，涉及算法很简单，就不进行一一说明，接下来会更新有关的游戏算法，最终代码的试验地址<a href="http://htmlpreview.github.io/?https://github.com/Godlike-meteor/JavaScript-/blob/master/index.html" target="_blank" rel="external">JavaScript简易五子棋</a></p>
]]></content:encoded>
      
      <comments>http://www.godlikemeteor.com/2018/03/01/JavaScript%E5%AE%9E%E6%88%98%EF%BC%9A%E7%AE%80%E6%98%93%E4%BA%94%E5%AD%90%E6%A3%8B/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Java探究人类社会的金钱问题</title>
      <link>http://www.godlikemeteor.com/2018/02/27/Java%E6%8E%A2%E7%A9%B6%E4%BA%BA%E7%B1%BB%E7%A4%BE%E4%BC%9A%E7%9A%84%E9%87%91%E9%92%B1%E9%97%AE%E9%A2%98/</link>
      <guid>http://www.godlikemeteor.com/2018/02/27/Java%E6%8E%A2%E7%A9%B6%E4%BA%BA%E7%B1%BB%E7%A4%BE%E4%BC%9A%E7%9A%84%E9%87%91%E9%92%B1%E9%97%AE%E9%A2%98/</guid>
      <pubDate>Mon, 26 Feb 2018 16:00:00 GMT</pubDate>
      <description>
      
        &lt;p&gt;最近在网上看到一个非常有意思的分钱问题，问题大概内容如下：&lt;/p&gt;
&lt;p&gt;房间里有100个人，每个人都有100元钱，他们在玩一个游戏。每轮游戏中，每个人都要拿走一元钱随机给另外一个人，最后这100个人的财富分布是怎样的？&lt;/p&gt;
&lt;p&gt;以下是三个不同的答案，请投票：&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>最近在网上看到一个非常有意思的分钱问题，问题大概内容如下：</p>
<p>房间里有100个人，每个人都有100元钱，他们在玩一个游戏。每轮游戏中，每个人都要拿走一元钱随机给另外一个人，最后这100个人的财富分布是怎样的？</p>
<p>以下是三个不同的答案，请投票：</p>
<p><img src="/images/分钱问题.jpg" alt=""></p>
<p>我相信大多数人都选B接近正态分布，也就是说第一轮A给B，第二轮B又给A，大家相差都不多，其实不然，正确的答案是C接近幂律分布，这篇文章发表在搜狐财经:<a href="http://www.sohu.com/a/159059809_167388" target="_blank" rel="external">该如何面对这个残酷的世界？</a>，对于我们来说，实现模拟更能直观的发现问题的所在，接下来我就使用Java swing编程实现该问题模拟。</p>
<h2 id="窗口和画布"><a href="#窗口和画布" class="headerlink" title="窗口和画布"></a>窗口和画布</h2><p>窗口选用GUI编程中的JFrame，主要绘图方式使用Graphics2D有关类运用，面板代码如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line">class AlgoFrame extends JFrame &#123;</div><div class="line"></div><div class="line">	private int canvasWidth;</div><div class="line">	private int canvasHeight;</div><div class="line"></div><div class="line">	public AlgoFrame(String title, int canvasWidth, int canvasHeight) &#123;</div><div class="line">		super(title);</div><div class="line"></div><div class="line">		this.canvasWidth = canvasWidth;</div><div class="line">		this.canvasHeight = canvasHeight;</div><div class="line"></div><div class="line">        //画布的设置</div><div class="line">		AlgoCanvas canvas = new AlgoCanvas();</div><div class="line">		setContentPane(canvas);</div><div class="line">		pack();</div><div class="line">		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</div><div class="line">		setResizable(<span class="literal">false</span>);</div><div class="line">		setVisible(<span class="literal">true</span>);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public int <span class="function"><span class="title">getCanvasWidth</span></span>() &#123;</div><div class="line">		<span class="built_in">return</span> canvasWidth;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public int <span class="function"><span class="title">getCanvasHeight</span></span>() &#123;</div><div class="line">		<span class="built_in">return</span> canvasHeight;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">    //钱数的数组</div><div class="line">	private int money[];</div><div class="line"></div><div class="line">	public void render(int money[]) &#123;</div><div class="line">		this.money = money;</div><div class="line">		repaint();</div><div class="line">	&#125;</div><div class="line"></div><div class="line">    //画板</div><div class="line">	private class AlgoCanvas extends JPanel &#123;</div><div class="line"></div><div class="line">		public <span class="function"><span class="title">AlgoCanvas</span></span>() &#123;</div><div class="line">			super(<span class="literal">true</span>);</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		@Override</div><div class="line">		public void paintComponent(Graphics g) &#123;</div><div class="line">			super.paintComponent(g);</div><div class="line">			Graphics2D g2d = (Graphics2D) g;</div><div class="line"></div><div class="line">            //抗锯齿</div><div class="line">			RenderingHints hints = new RenderingHints(RenderingHints.KEY_ANTIALIASING,</div><div class="line">					RenderingHints.VALUE_ANTIALIAS_ON);</div><div class="line">			hints.put(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);</div><div class="line">			g2d.addRenderingHints(hints);</div><div class="line"></div><div class="line">            //实现柱状图</div><div class="line">			int w = canvasWidth / money.length;</div><div class="line">			<span class="keyword">for</span> (int i = 0; i &lt; money.length; i++) &#123;</div><div class="line">				<span class="keyword">if</span> (money[i] &gt; 0) &#123;</div><div class="line">					AlgoVisHelper.fillRectangle(g2d, i * w + 1, canvasHeight / 2 - money[i], w - 1, money[i]);</div><div class="line">					AlgoVisHelper.setColor(g2d, AlgoVisHelper.Blue);</div><div class="line">				&#125; <span class="keyword">else</span> <span class="keyword">if</span>(money[i]&lt;0)&#123;</div><div class="line">					AlgoVisHelper.fillRectangle(g2d, i * w + 1, canvasHeight / 2, w - 1, -money[i]);</div><div class="line">					AlgoVisHelper.setColor(g2d, AlgoVisHelper.Red);</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">		@Override</div><div class="line">		public Dimension <span class="function"><span class="title">getPreferredSize</span></span>() &#123;</div><div class="line">			<span class="built_in">return</span> new Dimension(canvasWidth, canvasHeight);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>在定义有关的面板类的时候，同时将钱数数组的柱状图的长度和宽度进行定义，更好的进行可视化，由于钱数本题标注可以是负数，那么久本题而言就有两个颜色，红色为负债，蓝色为盈利。</p>
<h2 id="常用工具模版"><a href="#常用工具模版" class="headerlink" title="常用工具模版"></a>常用工具模版</h2><p>为了方便以后的代码管理，封装了一个常用的工具模版，具体代码如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div></pre></td><td class="code"><pre><div class="line">class AlgoVisHelper &#123;</div><div class="line"></div><div class="line">	private <span class="function"><span class="title">AlgoVisHelper</span></span>() &#123;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">    //Google标准颜色</div><div class="line">	public static final Color Red = new Color(0xf44336);</div><div class="line">	public static final Color Pink = new Color(0xe91e63);</div><div class="line">	public static final Color Purple = new Color(0x9c27b0);</div><div class="line">	public static final Color DeepPurple = new Color(0x673ab7);</div><div class="line">	public static final Color INDIGO_COLOR = new Color(0x3f51b5);</div><div class="line">	public static final Color Blue = new Color(0x2196f3);</div><div class="line">	public static final Color LightBlue = new Color(0x03a9f4);</div><div class="line">	public static final Color Cyan = new Color(0x00bcd4);</div><div class="line">	public static final Color Teal = new Color(0x009688);</div><div class="line">	public static final Color Green = new Color(0x4caf50);</div><div class="line">	public static final Color LightGreen = new Color(0x8bc34a);</div><div class="line">	public static final Color Lime = new Color(0xcddc39);</div><div class="line">	public static final Color Yellow = new Color(0xffe83b);</div><div class="line">	public static final Color Amber = new Color(0xffc107);</div><div class="line">	public static final Color Drange = new Color(0xff9800);</div><div class="line">	public static final Color DeepDrange = new Color(0xff5722);</div><div class="line">	public static final Color Brown = new Color(0x795548);</div><div class="line">	public static final Color Grey = new Color(0x9e9e9e);</div><div class="line">	public static final Color BlueGrey = new Color(0x607d8b);</div><div class="line">	public static final Color Black = new Color(0x000000);</div><div class="line">	public static final Color White = new Color(0xffffff);</div><div class="line"></div><div class="line">    //定义一个空心圆</div><div class="line">	public static void strokeCircle(Graphics2D g, int x, int y, int r) &#123;</div><div class="line">		Ellipse2D circle = new Ellipse2D.Double(x - r, y - r, 2 * r, 2 * r);</div><div class="line">		g.draw(circle);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">    //定义一个实心圆</div><div class="line">	public static void fillCircle(Graphics2D g, int x, int y, int r) &#123;</div><div class="line">		Ellipse2D circle = new Ellipse2D.Double(x - r, y - r, 2 * r, 2 * r);</div><div class="line">		g.fill(circle);</div><div class="line">	&#125;</div><div class="line">    //定义一个空心矩形</div><div class="line">	public static void strokeRectangle(Graphics2D g, int x, int y, int w, int h) &#123;</div><div class="line">		Rectangle2D rectangle = new Rectangle2D.Double(x, y, w, h);</div><div class="line">		g.draw(rectangle);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">    //定义一个实心矩形</div><div class="line">	public static void fillRectangle(Graphics2D g, int x, int y, int w, int h) &#123;</div><div class="line">		Rectangle2D rectangle = new Rectangle2D.Double(x, y, w, h);</div><div class="line">		g.fill(rectangle);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public static void setStrokeWidth(Graphics2D g, int w) &#123;</div><div class="line">		int strokeWidth = w;</div><div class="line">		g.setStroke(new BasicStroke(strokeWidth, BasicStroke.CAP_ROUND, BasicStroke.JOIN_ROUND));</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public static void setColor(Graphics2D g, Color color) &#123;</div><div class="line">		g.setColor(color);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">    //实现暂停效果（帧动画）</div><div class="line">	public static void pause(int t) &#123;</div><div class="line">		try &#123;</div><div class="line">			Thread.sleep(t);</div><div class="line">		&#125; catch (InterruptedException e) &#123;</div><div class="line">			System.out.println(<span class="string">"Error sleeping"</span>);</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="实现动画"><a href="#实现动画" class="headerlink" title="实现动画"></a>实现动画</h2><p>接下来就是最重要的一步，有关主类的动画设计，主要是柱状图的动画位置和帧播放速度，最后实现的代码如下：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line">public class AlgoVisualizer &#123;</div><div class="line"></div><div class="line">	private int money[];</div><div class="line">	private AlgoFrame frame;</div><div class="line"></div><div class="line">	public AlgoVisualizer(int sceneWidth, int sceneHeight) &#123;</div><div class="line"></div><div class="line">		money = new int[100];</div><div class="line">		<span class="keyword">for</span> (int i = 0; i &lt; money.length; i++) &#123;</div><div class="line">			money[i] = 100;</div><div class="line">		&#125;</div><div class="line"></div><div class="line">        //线程</div><div class="line">		EventQueue.invokeLater(() -&gt; &#123;</div><div class="line">			frame = new AlgoFrame(<span class="string">"welcome"</span>, sceneWidth, sceneHeight);</div><div class="line">			new Thread(() -&gt; &#123;</div><div class="line">				run();</div><div class="line">			&#125;).start();</div><div class="line">		&#125;);</div><div class="line">	&#125;</div><div class="line"></div><div class="line">    //动画效果的实现</div><div class="line">	private void <span class="function"><span class="title">run</span></span>() &#123;</div><div class="line">		<span class="keyword">while</span> (<span class="literal">true</span>) &#123;</div><div class="line">            //排列有序</div><div class="line">			Arrays.sort(money);</div><div class="line">			frame.render(money);</div><div class="line">            //延时</div><div class="line">			AlgoVisHelper.pause(40);</div><div class="line"></div><div class="line">			<span class="keyword">for</span> (int k = 0; k &lt; 50; k++) &#123;</div><div class="line">				<span class="keyword">for</span> (int i = 0; i &lt; money.length; i++) &#123;</div><div class="line">						int j = (int) (Math.random() * money.length);</div><div class="line">                        //钱的给予模拟</div><div class="line">						money[i] -= 1;</div><div class="line">						money[j] += 1;</div><div class="line">				&#125;</div><div class="line">			&#125;</div><div class="line">		&#125;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	public static void main(String[] args) &#123;</div><div class="line"></div><div class="line">		int sceneWidth = 1000;</div><div class="line">		int sceneHeight = 800;</div><div class="line"></div><div class="line">		AlgoVisualizer visualizer = new AlgoVisualizer(sceneWidth, sceneHeight);</div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>最后的代码模拟图大概跟下图差不多，说明两级分化越来越严重，但大多数人的水平还在一个范围内，我们的世界正是如此，所以我们应该明白，尽管最成功的玩家不一定是最努力的那个，但是努力的人大都混的还不错，所以说，努力才是硬道理！</p>
<p><img src="/images/分钱问题2.jpg" alt=""></p>
]]></content:encoded>
      
      <comments>http://www.godlikemeteor.com/2018/02/27/Java%E6%8E%A2%E7%A9%B6%E4%BA%BA%E7%B1%BB%E7%A4%BE%E4%BC%9A%E7%9A%84%E9%87%91%E9%92%B1%E9%97%AE%E9%A2%98/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Hexo博客搭建攻略（三）：高级篇【SEO优化】【持续更新】</title>
      <link>http://www.godlikemeteor.com/2017/07/26/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%94%BB%E7%95%A5%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E9%AB%98%E7%BA%A7%E7%AF%87%E3%80%90SEO%E4%BC%98%E5%8C%96%E3%80%91/</link>
      <guid>http://www.godlikemeteor.com/2017/07/26/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%94%BB%E7%95%A5%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E9%AB%98%E7%BA%A7%E7%AF%87%E3%80%90SEO%E4%BC%98%E5%8C%96%E3%80%91/</guid>
      <pubDate>Wed, 26 Jul 2017 10:08:31 GMT</pubDate>
      <description>
      
        &lt;p&gt;经过博客的基础搭建和必要组件的集成后，我们不能让自己的博客仅仅局限于自己使用，我们还得让它在Google和百度上能搜索的到，最好要在搜索的第一页进行展示，借鉴了简书上一些作者的SEO优化方法，优化了一下SEO，发现我也能让自己的博客在Google上排名十分靠前了，上图：&lt;/
      
      </description>
      
      <content:encoded><![CDATA[<p>经过博客的基础搭建和必要组件的集成后，我们不能让自己的博客仅仅局限于自己使用，我们还得让它在Google和百度上能搜索的到，最好要在搜索的第一页进行展示，借鉴了简书上一些作者的SEO优化方法，优化了一下SEO，发现我也能让自己的博客在Google上排名十分靠前了，上图：</p>
<p><img src="/images/例子1.jpg" alt=""></p>
<h2 id="首页-title-优化"><a href="#首页-title-优化" class="headerlink" title="首页 title 优化"></a>首页 title 优化</h2><p>更改 <code>index.swig</code> 文件(<code>your-hexo-site\themes\next\layout</code>);</p>
<p>将下面的代码</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% block title %&#125; &#123;&#123; config.title &#125;&#125; &#123;% endblock %&#125;</div></pre></td></tr></table></figure>
<p>修改成为：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;% block title %&#125; &#123;&#123; config.title &#125;&#125; - &#123;&#123; theme.description &#125;&#125; &#123;% endblock %&#125;</div></pre></td></tr></table></figure>
<p>这时候你的首页会更符合 <code>网站名称 - 网站描述</code> 这习惯了，搜索引擎爬虫也能更好的爬取你的内容了。</p>
<h2 id="添加-sitemap-站点地图"><a href="#添加-sitemap-站点地图" class="headerlink" title="添加 sitemap 站点地图"></a>添加 sitemap 站点地图</h2><p>1.安装sitemap站点地图自动生成插件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">npm install hexo-generator-sitemap --save</div><div class="line">npm install hexo-generator-baidu-sitemap --save</div></pre></td></tr></table></figure>
<p>2.在<code>主题配置文件</code>中添加一下配置。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">sitemap: </div><div class="line">  path: sitemap.xml</div><div class="line">baidusitemap:</div><div class="line">  path: baidusitemap.xml</div></pre></td></tr></table></figure>
<p>然后在主题配置文件中修改url为你的域名,例如：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">url: http://http://godlikemeteor.com/</div></pre></td></tr></table></figure>
<p>配置好后，<code>hexo g</code> 就能在 <code>your-hexo-site\public</code> 中生成 <code>sitemap.xml</code> 和 <code>baidusitemap.xml</code> 了;其中第一个是一会要提交给google的，后面那个看名字当然就是提交给Baidu的了；</p>
<p>3.在 <code>your-hexo-site\source</code> 中新建文件 <code>robots.txt</code>:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">User-agent: *</div><div class="line">Allow: /</div><div class="line">Allow: /archives/</div><div class="line">Allow: /categories/</div><div class="line">Allow: /tags/ </div><div class="line">Disallow: /vendors/</div><div class="line">Disallow: /js/</div><div class="line">Disallow: /css/</div><div class="line">Disallow: /fonts/</div><div class="line">Disallow: /vendors/</div><div class="line">Disallow: /fancybox/</div></pre></td></tr></table></figure>
<p>4.在 <code>robots.txt</code> 中添加下面的代码：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Sitemap: http://godlikemeteor.com/sitemap.xml</div><div class="line">Sitemap: http://godlikemeteor.com/baidusitemap.xml</div></pre></td></tr></table></figure>
<p>注：请自行修改为自己的网站域名！</p>
<p>然后 <code>hexo d -g</code> 提交一下。</p>
<h2 id="注册-Google-Search-Console"><a href="#注册-Google-Search-Console" class="headerlink" title="注册 Google Search Console"></a>注册 Google Search Console</h2><p><a href="https://www.google.com/webmasters/" target="_blank" rel="external">注册 Google Search Console</a><br>根据提示注册好之后，添加你的博客域名。</p>
<p><img src="/images/例子2.jpg" alt=""></p>
<p>然后点击域名进入 Search Console </p>
<p><img src="/images/例子3.jpg" alt=""></p>
<h2 id="测试robots-txt"><a href="#测试robots-txt" class="headerlink" title="测试robots.txt"></a>测试robots.txt</h2><p>点击左侧的 <code>robots.txt</code> 测试工具，根据提示提交你的<code>robots.txt</code>。</p>
<p><img src="/images/例子4.jpg" alt=""></p>
<h2 id="提交站点地图"><a href="#提交站点地图" class="headerlink" title="提交站点地图"></a>提交站点地图</h2><p>别忘了我们刚才创建的 <code>sitemap.xml</code> 文件,现在它要派上用场了。点击左侧工具栏的站点地图:</p>
<p><img src="/images/例子5.jpg" alt=""></p>
<p>然后点右上角的添加/测试站点地图。输入sitemap先点测试，如果没问题的话，再提交。</p>
<p><img src="/images/例子6.jpg" alt=""></p>
<h2 id="Google抓取方式"><a href="#Google抓取方式" class="headerlink" title="Google抓取方式"></a>Google抓取方式</h2><p>至此，我们只需要使用Google抓取工具就可以实现网站的抓取了，具体内容将会在以后更新，谢谢大家！</p>
]]></content:encoded>
      
      <comments>http://www.godlikemeteor.com/2017/07/26/Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%94%BB%E7%95%A5%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E9%AB%98%E7%BA%A7%E7%AF%87%E3%80%90SEO%E4%BC%98%E5%8C%96%E3%80%91/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
